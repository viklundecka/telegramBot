from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
import logging

from keyboards.inline import get_main_menu
from storage.json_storage import JSONStorage
from filters.text_length_filter import TextLengthFilter
from config.settings import ADMIN_IDS

router = Router()
storage = JSONStorage()
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def start_command(message: Message, state: FSMContext):
    await state.clear()

    await storage.add_user(
        message.from_user.id,
        message.from_user.username
    )

    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n\n"
        "–Ø –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ:\n"
        "üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ\n"
        "üê± –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∫–æ—Ç–∞—Ö\n"
        "üìù –ü—Ä–æ—á–∏—Ç–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ –∑–∞–ø–∏—Å–∏\n"
        "‚≠ê –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª—é–±–∏–º—ã–µ –≥–æ—Ä–æ–¥–∞\n"
        "üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n"
        "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
        reply_markup=get_main_menu()
    )

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")


@router.message(Command("help"))
async def help_command(message: Message):
    is_admin = message.from_user.id in ADMIN_IDS

    help_text = """
ü§ñ **–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É**

üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/weather - –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É
/cat - –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –æ –∫–æ—Ç–∞—Ö
/favorites - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏
/about - –û –±–æ—Ç–µ
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/contact - –ö–æ–Ω—Ç–∞–∫—Ç—ã
"""

    if is_admin:
        help_text += """
üëë **–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:**
/admin - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
/allusers - –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
/userinfo <id> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
"""

    help_text += """
üéÆ **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ –≥–æ—Ä–æ–¥–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
‚Ä¢ –ü–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ

‚ùì **–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?** –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É!
"""

    await message.answer(help_text, reply_markup=get_main_menu(), parse_mode="Markdown")
    await storage.update_user_activity(message.from_user.id)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–º–æ—â—å")


@router.message(Command("about"))
async def about_command(message: Message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    about_text = """
ü§ñ **–û –±–æ—Ç–µ**

**–í–µ—Ä—Å–∏—è:** 1.0.0
**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @swerchansky
**–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:** aiogram 3.x, aiohttp, Python 3.13+

–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –∫–∞–∫ —É—á–µ–±–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç:
‚Ä¢ –†–∞–±–æ—Ç—É —Å –≤–Ω–µ—à–Ω–∏–º–∏ API (Weatherstack, Cat Facts, JSONPlaceholder)
‚Ä¢ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ FSM (–º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π)
‚Ä¢ Middleware –∏ —Ñ–∏–ª—å—Ç—Ä—ã
‚Ä¢ –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

üå§ **API —Å–µ—Ä–≤–∏—Å—ã:**
‚Ä¢ Weatherstack - –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ
‚Ä¢ Cat Facts API - –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∫–æ—Ç–∞—Ö
‚Ä¢ JSONPlaceholder - –¥–µ–º–æ API –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

    await message.answer(about_text, reply_markup=get_main_menu(), parse_mode="Markdown")
    await storage.update_user_activity(message.from_user.id)


@router.message(Command("stats"))
async def stats_command(message: Message):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞"""
    stats = await storage.get_statistics()
    user_favorites = await storage.get_favorites(message.from_user.id)

    stats_text = f"""
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞**

üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats.get('total_users', 0)}
üìà –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats.get('total_requests', 0)}
üéØ –í–∞—à–∏—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤: {len(user_favorites)}
üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: {stats.get('bot_started', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}

‚≠ê **–í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞:**
{chr(10).join([f"‚Ä¢ {city}" for city in user_favorites]) if user_favorites else "–ü–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤"}
"""

    await message.answer(stats_text, reply_markup=get_main_menu(), parse_mode="Markdown")
    await storage.update_user_activity(message.from_user.id)


@router.message(Command("contact"))
async def contact_command(message: Message):
    """–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"""
    contact_text = """
üìû **–ö–æ–Ω—Ç–∞–∫—Ç—ã**

–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:
üí¨ **Telegram:** [@Viklundechka](https://t.me/viklundechka)

üí° **–ï—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è?** –ù–∞–ø–∏—à–∏—Ç–µ –≤ Telegram

–ë—É–¥—É —Ä–∞–¥ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º! üòä
"""

    await message.answer(contact_text, reply_markup=get_main_menu(), parse_mode="Markdown")
    await storage.update_user_activity(message.from_user.id)


@router.message(
    TextLengthFilter(max_length=50),
    ~F.text.startswith('/'),
    lambda message, state: state is None or state.get_state() is None
)
async def echo_short_message(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer(
            f"üìù –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: *{message.text}*\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º!",
            reply_markup=get_main_menu(),
            parse_mode="Markdown"
        )
        await storage.update_user_activity(message.from_user.id)


@router.message()
async def unknown_command(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer(
            "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_menu()
        )
        await storage.update_user_activity(message.from_user.id)